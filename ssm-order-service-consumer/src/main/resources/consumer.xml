<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:dubbo="http://dubbo.apache.org/schema/dubbo"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://dubbo.apache.org/schema/dubbo http://dubbo.apache.org/schema/dubbo/dubbo.xsd
		http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

	<context:component-scan base-package="com.demo.gmall.service.impl"></context:component-scan>

	<!-- 消费方应用名，用于计算依赖关系，不是匹配条件，不要与提供方一样 -->
	<dubbo:application name="order-service-consumer"></dubbo:application>
	<!-- 2：指定注册中心的位置 -->
	<dubbo:registry protocol="zookeeper"
		address="127.0.0.1:2181"></dubbo:registry>

	<!-- 生成远程服务代理，可以和本地bean一样使用demoService
	 	参数check：如果为false，则说明消费者在启动的时间不需要进行检查
	 	参数check：如果为true，则说明消费者在启动的时间需要进行检查

		对于消费者，可以进行统一的配置，可以使用<dubbo:consumer>来统一的配置

	 Dubbo 缺省会在启动时检查依赖的服务是否可用，不可用时会抛出异常，阻止 Spring 初始化完成，以便上线时，能及早发现问题，默认 check="true"。

	  可以通过 check="false" 关闭检查，比如，测试时，有些服务不关心，或者出现了循环依赖，必须有一方先启动。

	  另外，如果你的 Spring 容器是懒加载的，或者通过 API 编程延迟引用服务，请关闭 check，否则服务临时不可用时，
	  会抛出异常，拿到 null 引用，如果 check="false"，总是会返回引用，当服务恢复时，能自动连上。

	 -->
	<dubbo:reference id="UserService" interface="com.demo.gmall.service.UserService"/>

	<dubbo:monitor protocol="registry"></dubbo:monitor>


	<!--统一配置消费者规则 关闭所有服务的启动检查，没有服务提供者时报错-->
	<dubbo:consumer check="false"></dubbo:consumer>

	
</beans>
